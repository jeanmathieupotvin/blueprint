% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions.R
\name{is_single}
\alias{is_single}
\alias{is_scalar_character}
\alias{is_scalar_logical}
\alias{is_scalar_integer}
\alias{is_scalar_numeric}
\alias{is_strict_atomic}
\title{Simple assertions}
\usage{
is_single(x)

is_scalar_character(x)

is_scalar_logical(x)

is_scalar_integer(x)

is_scalar_numeric(x)

is_strict_atomic(x)
}
\arguments{
\item{x}{any \R object.}
}
\value{
All functions return a scalar logical. A \code{TRUE} implies that the
underlying tested object \emph{is} something (that \emph{something} is given by
the function's name).
}
\description{
Check if an object is of a proper type, class and/or length. This is
useful when implementing simple checks. These are used extensively in
package \pkg{blueprint} and are all available to the users for convenience.
}
\section{Numeric versus double values}{

\link[base:numeric]{Numeric} is a synonym of \link[base:double]{double}. The
distinction stems from historical choices that are described
\link[base:double]{here}.
}

\section{Strict atomic values}{

In package \pkg{blueprint}, a \emph{strict atomic value} is any \R value
that respects the following criteria.
\enumerate{
\item It is an atomic \R type:
\code{\link[base:NULL]{NULL}},
\link[base:logical]{logical},
\link[base:integer]{integer},
\link[base:double]{single},
\link[base:double]{double} (or \link[base:numeric]{numeric}),
\link[base:complex]{complex},
\link[base:character]{character} or
\link[base:raw]{raw}.
\item It is a pure vector that has only one non-degenerate dimension.
\item It does not possess any structural attributes (other than type-related
attributes), not even \link[base:names]{names}.
}

Matrices, arrays and other recursive structures are \strong{not} strict atomic
values. Vectors such as \link[base:factor]{factors} that are described by
attributes (comments, levels, names, etc.) are \strong{not} strict atomic values.
\link[base:double]{Single} values (see section Single values below) are
considered to be strict atomic values.
}

\section{Single values}{

There is no \link[base:double]{single} values in \R. A \link[base:double]{single}
is a \link[base:double]{double} that has a unique attribute called \code{"Csingle"}
set equal to \code{TRUE}. Trying to use the old \R function
\link[base:is.single]{is.single()} will simply throw an error. This is because
so-called single values should only be used with arguments used in external
interfaces (such as \link[base:Foreign]{.C()} and \link[base:Foreign]{.Fortran()}).
Therefore, function \code{\link[=is_single]{is_single()}} checks that the argument passed to it is a
\link[base:double]{double} with an attribute \code{"Csingle"} set equal to \code{TRUE}.
}

\author{
Jean-Mathieu Potvin (\href{mailto:jm@potvin.xyz}{jm@potvin.xyz})
}
\concept{assertions}
